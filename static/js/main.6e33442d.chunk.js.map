{"version":3,"sources":["Comps/Section/Section.jsx","Comps/FeedbackOptions/FeedbackOptions.jsx","Comps/Notification/Notification.jsx","Comps/Statistics/Statistics.jsx","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","el","type","onClick","toUpperCase","slice","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","incr","key","setState","pState","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","className","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OAC9B,wBAAiBC,KAAK,SAASC,QAAS,kBAAMN,EAAgBI,IAA9D,SACGA,EAAG,GAAGG,cAAgBH,EAAGI,MAAM,IADrBJ,MCFF,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICUEC,MAXf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCAeC,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,KAAO,SAACC,GACN,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAME,EAAOF,GAAO,O,EAIzBG,mBAAqB,WACnB,OAAOtB,OAAOuB,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKtB,GAAN,OAAasB,EAAMtB,M,EAG7DuB,gCAAkC,WAChC,OAAO,EAAKT,MAAMN,KACdgB,KAAKC,MAAO,EAAKX,MAAMN,KAAO,EAAKW,qBAAwB,KAC3D,G,4CAGN,WACE,OACE,sBAAKO,UAAU,MAAf,UACE,cAACnC,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CAAiBC,QAASgC,KAAKb,MAAOlB,gBAAiB+B,KAAKZ,SAG9D,cAACxB,EAAD,CAASC,MAAM,aAAf,SACGmC,KAAKR,qBACJ,cAAC,EAAD,CACEX,KAAMmB,KAAKb,MAAMN,KACjBC,QAASkB,KAAKb,MAAML,QACpBC,IAAKiB,KAAKb,MAAMJ,IAChBC,MAAOgB,KAAKR,qBACZP,mBAAoBe,KAAKJ,oCAG3B,cAAClB,EAAD,CAAcC,QAAQ,+B,GAxCDsB,IAAMC,WCFvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6e33442d.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n","export default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return Object.keys(options).map((el) => (\n    <button key={el} type=\"button\" onClick={() => onLeaveFeedback(el)}>\n      {el[0].toUpperCase() + el.slice(1)}\n    </button>\n  ));\n}\n","export default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n","function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\nexport default Statistics;\n","// import './App.css';\nimport React from \"react\";\nimport Section from \"./Comps/Section/Section\";\nimport FeedbackOptions from \"./Comps/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./Comps/Notification/Notification\";\nimport Statistics from \"./Comps/Statistics/Statistics\";\n\nexport default class App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incr = (key) => {\n    this.setState((pState) => ({\n      [key]: pState[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, el) => acc + el);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.state.good\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.incr} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}